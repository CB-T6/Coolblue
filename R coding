#Coolblue

#Check for missing values 
apply(is.na(broadcasting_data[,]),2,sum) 
apply(is.na(traffic_data[,]),2,sum) # average session: 13,5% of missing values & 
                                    # bounces :49% of missing values . We delete variable "bounces"
                                              
#Converting NAs to mean
traffic_data <- traffic_data  %>% 
  mutate(avg_session_quality = if_else(is.na(avg_session_quality) == TRUE, 
                                 mean(avg_session_quality, na.rm = TRUE), avg_session_quality))                                 
                        
#Deleting "bounces"
traffic_data <- subset(traffic_data, select = -c(bounces))
summary(traffic_data)                                   
                                   
#Convert into dates
traffic_data$date_time <- as.POSIXct(traffic_data$date_time)
broadcasting_data$date <- as.POSIXct(broadcasting_data$date)

#Factorize
traffic_data$medium <- as.factor(traffic_data$medium)
traffic_data$visit_source <- as.factor(traffic_data$visit_source)
traffic_data$page_category<-as.factor(traffic_data$page_category)
traffic_data$country<-as.factor(traffic_data$country)
broadcasting_data$operator <- as.factor(broadcasting_data$operator)
broadcasting_data$channel <- as.factor(broadcasting_data$channel)
broadcasting_data$position_in_break <- as.factor(broadcasting_data$position_in_break)
broadcasting_data$length_of_spot <- as.factor(broadcasting_data$length_of_spot)
broadcasting_data$program_before <- as.factor(broadcasting_data$program_before)
broadcasting_data$program_after <- as.factor(broadcasting_data$program_after)
broadcasting_data$program_category_before <- as.factor(broadcasting_data$program_category_before)
broadcasting_data$program_category_after <- as.factor(broadcasting_data$program_category_after)
broadcasting_data$product_category <- as.factor(broadcasting_data$product_category)
broadcasting_data$country <- as.factor(broadcasting_data$country)


#Find the mean 
mean(traffic_data$avg_session_quality, na.rm = TRUE)

#Check for outliers
boxplot(broadcasting_data$gross_rating_point,xlab ="gross_rating_point")          # many  outliers, not gonna delete them, important for analysis
boxplot(traffic_data$avg_session_quality,xlab ="avg_session_quality")


#Descriptive Statistics
library(psych)
describe(broadcasting_data)
describe(traffic_data$avg_session_quality)
describe(traffic_data$visits_index)

                              
 #data exploration 
#Mean and variance for two numeric variables
traffic_data %>%
  summarise(median=median(avg_session_quality), variance=var(avg_session_quality))


traffic_data %>%
  summarise(median=median(visits_index), variance=var(visits_index))

traffic_data %>%
  summarise(mean=mean(avg_session_quality), sum=sum(avg_session_quality), n=n())


min(traffic_data$avg_session_quality) #1
max(traffic_data$avg_session_quality) #96



(country_separation1 <- traffic_data %>%
  group_by(country) %>% 
  summarise(mean=mean(avg_session_quality), variance=var(avg_session_quality))) #useful

(country_separation2 <- traffic_data %>%
    group_by(country) %>% 
    summarise(mean=mean(visits_index), variance=var(visits_index))) #useful


#for now not helping, future?
(country_separation3 <- traffic_data %>%
    group_by(date_time) %>% 
    summarise(mean=mean(avg_session_quality), variance=var(avg_session_quality))) #notuseful

(country_separation3 <- traffic_data %>%
    group_by(date_time, country) %>% 
    summarise(mean=mean(avg_session_quality), variance=var(avg_session_quality))) #notuseful

table(traffic_data$medium, traffic_data$country)
table(traffic_data$page_category)/length(traffic_data$page_category)            
table(traffic_data$page_category, traffic_data$country) / length(traffic_data$country)          
table(traffic_data$avg_session_quality, traffic_data$medium)

summary(traffic_data$avg_session_quality)


#numeric variables
range(traffic_data$avg_session_quality)
range(traffic_data$visits_index) #maybe

#corr - must be numeric
cor(traffic_data$avg_session_quality, traffic_data$visits_index) #-0.005074682
cov(traffic_data$avg_session_quality, traffic_data$visits_index) #=variance, -0.001598219


plot(traffic_data$avg_session_quality, traffic_data$visits_index)
                                  
